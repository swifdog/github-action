const swifdog = require("../swifdog")('max@mustermann.de', 'password');
const SimpleDateFormat = require('@riversun/simple-date-format');

function listProjects() {
    return new Promise(resolve => {
        swifdog.projects.list((err, response) => {
            if (err) throw err;
            else {
                resolve(response);
            }
        });
    });
}

function createProject(name) {
    return new Promise(resolve => {
        swifdog.projects.create(name, (err, response) => {
            if (err) throw err;
            else {
                resolve(response.id);
            }
        });
    });
}

function createPacket(projectId, packetName, imageName) {
    return new Promise(resolve => {
        swifdog.projects.packets.create(projectId, packetName, imageName, (err, response) => {
            if (err) throw err;
            else {
                resolve(response.id);
            }
        });
    });
}

function createIngress(projectId, packetId, containerPort, hostname) {
    return new Promise(resolve => {
        swifdog.projects.packets.ingress.create(projectId, packetId, containerPort, hostname, (err, response) => {
            if (err) throw err;
            else {
                resolve(response.id);
            }
        });
    });
}

async function createDemoProject() {
    // create cool domain!
    const date = new Date('2018/07/17 12:08:56');
    const sdf = new SimpleDateFormat("HH-mm-ss-dd-MM-yyyy");
    const prefix = sdf.format(date);

    // list existing projects
    const projects = await listProjects();

    for (let project of projects) {
        console.log(JSON.stringify(project));
    }

    // create new project.
    const projectId = await createProject(prefix);
    console.log('ProjectId: ' + projectId);

    const packetId = await createPacket(projectId, 'webapp', 'nginx:latest');
    console.log('PacketId: ' + packetId);

    const ingressId = await createIngress(projectId, packetId, '80', prefix + '.demo.kubexsrv.de');
    console.log('IngressId: ' + ingressId);

    return 'http://' + prefix + '.demo.kubexsrv.de';
}

createDemoProject().then((data) => console.log('Open deployment in browser: ' + data));

// swifdog.projects.delete('dc6b88a3-f4f7-4717-a452-e1814df76cb8', handleCallback);

// swifdog.projects.create('demo', handleCallback);
